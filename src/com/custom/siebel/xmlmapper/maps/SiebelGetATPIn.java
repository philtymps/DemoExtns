/**
  * SiebelGetATPIn.java
  *
  *	This code was generated by HAHTsite
  *
  **/

/////////////////////////////////////////////////////////////////////////////
// PACKAGE
/////////////////////////////////////////////////////////////////////////////
package com.custom.siebel.xmlmapper.maps;

import com.haht.xml.*;
import com.haht.xml.transform.*;
import com.haht.xml.library.*;
import com.custom.siebel.xmlmapper.*;

public class SiebelGetATPIn extends com.custom.yantra.xmlmapper.YantraMapper
{	
    protected static final int QUAL_NONE = 0;
    protected static final int QUAL_STAR = 1;
    protected static final int QUAL_PLUS = 2;
    protected static final int QUAL_HOOK = 3;

    protected static final int TYPE_ELEM = 0;
    protected static final int TYPE_ALT = 1;
    protected static final int TYPE_SEQ = 2;
    protected static final int TYPE_MIXED = 3;
    protected static final int TYPE_TEXT = 4;
    protected static final int TYPE_EMPTY = 5;
    protected static final int TYPE_ANY = 6;


    /////////////////////////////////////////////////////////////////////////
    // Target Content Model
    /////////////////////////////////////////////////////////////////////////

	protected static final int ID_PROMISE = 0;
	protected static final int ID_YFC_DOC = 1;
	protected static final int ID_SHIPNODES = 2;
	protected static final int ID_SHIPTOADDRESS = 3;
	protected static final int ID_PROMISELINES = 4;
	protected static final int ID_PROMISESERVICELINES = 5;
	protected static final int ID_SERVICEASSOCIATIONS = 6;
	protected static final int ID_SHIPNODE = 7;
	protected static final int ID_PROMISELINE = 8;
	protected static final int ID_PROMISESERVICELINE = 9;
	protected static final int ID_SERVICEASSOCIATION = 10;
	protected static final int ID_TAG = 11;
	protected static final int ID_BUNDLEPARENTLINE = 12;


    protected static com.haht.xml.wrapper.ContentModel[] rTargetModels =
    {
		new com.haht.xml.wrapper.ContentModel("Promise", null,  TYPE_SEQ, QUAL_NONE),
		new com.haht.xml.wrapper.ContentModel("yfc:doc", null,  TYPE_TEXT, QUAL_NONE),
		new com.haht.xml.wrapper.ContentModel("ShipNodes", null,  TYPE_SEQ, QUAL_NONE),
		new com.haht.xml.wrapper.ContentModel("ShipToAddress", null,  TYPE_SEQ, QUAL_NONE),
		new com.haht.xml.wrapper.ContentModel("PromiseLines", null,  TYPE_SEQ, QUAL_NONE),
		new com.haht.xml.wrapper.ContentModel("PromiseServiceLines", null,  TYPE_SEQ, QUAL_NONE),
		new com.haht.xml.wrapper.ContentModel("ServiceAssociations", null,  TYPE_SEQ, QUAL_NONE),
		new com.haht.xml.wrapper.ContentModel("ShipNode", null,  TYPE_SEQ, QUAL_NONE),
		new com.haht.xml.wrapper.ContentModel("PromiseLine", null,  TYPE_SEQ, QUAL_NONE),
		new com.haht.xml.wrapper.ContentModel("PromiseServiceLine", null,  TYPE_SEQ, QUAL_NONE),
		new com.haht.xml.wrapper.ContentModel("ServiceAssociation", null,  TYPE_SEQ, QUAL_NONE),
		new com.haht.xml.wrapper.ContentModel("Tag", null,  TYPE_SEQ, QUAL_NONE),
		new com.haht.xml.wrapper.ContentModel("BundleParentLine", null,  TYPE_SEQ, QUAL_NONE),

    };

    protected static com.haht.xml.wrapper.ModelItem[][] rTargetModelItems = 
    {
		{ new com.haht.xml.wrapper.ModelItem(ID_YFC_DOC, QUAL_HOOK), new com.haht.xml.wrapper.ModelItem(ID_SHIPNODES, QUAL_HOOK), new com.haht.xml.wrapper.ModelItem(ID_SHIPTOADDRESS, QUAL_HOOK), new com.haht.xml.wrapper.ModelItem(ID_PROMISELINES, QUAL_HOOK), new com.haht.xml.wrapper.ModelItem(ID_PROMISESERVICELINES, QUAL_HOOK), new com.haht.xml.wrapper.ModelItem(ID_SERVICEASSOCIATIONS, QUAL_HOOK) },
		{ null },
		{ new com.haht.xml.wrapper.ModelItem(ID_YFC_DOC, QUAL_HOOK), new com.haht.xml.wrapper.ModelItem(ID_SHIPNODE, QUAL_STAR) },
		{ new com.haht.xml.wrapper.ModelItem(ID_YFC_DOC, QUAL_HOOK) },
		{ new com.haht.xml.wrapper.ModelItem(ID_PROMISELINE, QUAL_STAR) },
		{ new com.haht.xml.wrapper.ModelItem(ID_PROMISESERVICELINE, QUAL_STAR) },
		{ new com.haht.xml.wrapper.ModelItem(ID_SERVICEASSOCIATION, QUAL_HOOK) },
		{ new com.haht.xml.wrapper.ModelItem(ID_YFC_DOC, QUAL_HOOK) },
		{ new com.haht.xml.wrapper.ModelItem(ID_YFC_DOC, QUAL_HOOK), new com.haht.xml.wrapper.ModelItem(ID_SHIPNODES, QUAL_HOOK), new com.haht.xml.wrapper.ModelItem(ID_TAG, QUAL_HOOK), new com.haht.xml.wrapper.ModelItem(ID_BUNDLEPARENTLINE, QUAL_HOOK) },
		{ new com.haht.xml.wrapper.ModelItem(ID_YFC_DOC, QUAL_HOOK), new com.haht.xml.wrapper.ModelItem(ID_SHIPNODES, QUAL_HOOK) },
		{ new com.haht.xml.wrapper.ModelItem(ID_YFC_DOC, QUAL_HOOK) },
		{ new com.haht.xml.wrapper.ModelItem(ID_YFC_DOC, QUAL_HOOK) },
		{ new com.haht.xml.wrapper.ModelItem(ID_YFC_DOC, QUAL_HOOK) },

    };

    protected com.haht.xml.wrapper.ContentModel getTargetModel(int id)
    {
		return rTargetModels[id];
    }

    protected com.haht.xml.wrapper.ModelItem[] getTargetModelItems(int id)
    {
		return rTargetModelItems[id];
    }

    /////////////////////////////////////////////////////////////////////////
    // Transformation map
    /////////////////////////////////////////////////////////////////////////

    private static Object[][] rProcess =
    {
		{ null },
		{ null },
		{ new ExpressionProcess(SiebelGetATPIn.class, "_expression_2_0", "", "") },
		{ new ExpressionProcess(SiebelGetATPIn.class, "_expression_3_0", "", "") },
		{ new FilterProcess(SiebelGetATPIn.class, "_filter_4_0", "java.lang.String", "org.w3c.dom.Node") },
		{ null },
		{ null },
		{ new ExpressionProcess(SiebelGetATPIn.class, "_expression_7_0", "", "") },
		{ null },
		{ null },
		{ null },
		{ null },
		{ null },
		{ new ExpressionProcess(SiebelGetATPIn.class, "_expression_13_0", "", "") },
		{ null },
		{ null },
		{ new FilterProcess(SiebelGetATPIn.class, "_filter_16_0", "java.lang.String", "org.w3c.dom.Node") },
		{ null },
		{ null },
		{ null },
		{ null },
		{ null },
		{ null },
		{ new ExpressionProcess(SiebelGetATPIn.class, "_expression_23_0", "", "") },
		{ new ExpressionProcess(SiebelGetATPIn.class, "_expression_24_0", "", "") },
		{ new ConditionProcess(SiebelGetATPIn.class, "_condition_25_0", "java.lang.String", "org.w3c.dom.Node") },

    };

    private static MapEntry[] rMapEntries =
    {
		new MapEntry(
				0,
				0,
				-1,
				"ATPCheckInterface/ATPHeader/OrganizationId",
				"",
				"",
				"",
				"1:1:1",
				rProcess[0]),

		new MapEntry(
				1,
				0,
				-1,
				"ATPCheckInterface/ATPHeader/OrganizationIntegrationId",
				"",
				"",
				"",
				"1:1:1",
				rProcess[1]),

		new MapEntry(
				2,
				0,
				-1,
				"",
				"",
				"Promise",
				"OrganizationCode",
				"",
				rProcess[2]),

		new MapEntry(
				3,
				0,
				-1,
				"",
				"",
				"Promise",
				"CheckInventory",
				"",
				rProcess[3]),

		new MapEntry(
				4,
				0,
				-1,
				"ATPCheckInterface/ATPHeader/RequestedDate",
				"",
				"Promise",
				"ReqStartDate",
				"1:1:1",
				rProcess[4]),

		new MapEntry(
				5,
				0,
				-1,
				"ATPCheckInterface/ATPHeader/ShipCompleteFlag",
				"",
				"",
				"",
				"1:1:1",
				rProcess[5]),

		new MapEntry(
				6,
				0,
				-1,
				"ATPCheckInterface/ATPHeader/SingleDelivery",
				"",
				"",
				"",
				"1:1:1",
				rProcess[6]),

		new MapEntry(
				7,
				0,
				-1,
				"",
				"",
				"Promise",
				"DependencyShippingRule",
				"",
				rProcess[7]),

		new MapEntry(
				8,
				0,
				-1,
				"ATPCheckInterface/ATPHeader/ATPLineItems",
				"",
				"Promise/PromiseLines/PromiseLine",
				"",
				"1:1:n",
				rProcess[8]),

		new MapEntry(
				9,
				0,
				-1,
				"ATPCheckInterface/ATPHeader/ATPLineItems/IntegrationId",
				"",
				"",
				"",
				"1:1:n:1",
				rProcess[9]),

		new MapEntry(
				10,
				0,
				-1,
				"ATPCheckInterface/ATPHeader/ATPLineItems/RowId",
				"",
				"",
				"",
				"1:1:n:1",
				rProcess[10]),

		new MapEntry(
				11,
				0,
				-1,
				"ATPCheckInterface/ATPHeader/ATPLineItems/RowId",
				"",
				"Promise/PromiseLines/PromiseLine",
				"LineId",
				"1:1:n:1",
				rProcess[11]),

		new MapEntry(
				12,
				0,
				-1,
				"ATPCheckInterface/ATPHeader/ATPLineItems/RequestedQuantity",
				"",
				"Promise/PromiseLines/PromiseLine",
				"RequiredQty",
				"1:1:n:1",
				rProcess[12]),

		new MapEntry(
				13,
				0,
				-1,
				"",
				"",
				"Promise/PromiseLines/PromiseLine",
				"ItemID",
				"",
				rProcess[13]),

		new MapEntry(
				14,
				0,
				-1,
				"ATPCheckInterface/ATPHeader/ATPLineItems/ProductId",
				"",
				"",
				"",
				"1:1:n:1",
				rProcess[14]),

		new MapEntry(
				15,
				0,
				-1,
				"ATPCheckInterface/ATPHeader/ATPLineItems/ProductIntegrationId",
				"",
				"",
				"",
				"1:1:n:1",
				rProcess[15]),

		new MapEntry(
				16,
				0,
				-1,
				"ATPCheckInterface/ATPHeader/ATPLineItems/UnitOfMeasure",
				"",
				"Promise/PromiseLines/PromiseLine",
				"UnitOfMeasure",
				"1:1:n:1",
				rProcess[16]),

		new MapEntry(
				17,
				0,
				-1,
				"ATPCheckInterface/ATPHeader/ATPLineItems/PartNumber",
				"",
				"",
				"",
				"1:1:n:1",
				rProcess[17]),

		new MapEntry(
				18,
				0,
				-1,
				"ATPCheckInterface/ATPHeader/ShippingMethod",
				"",
				"Promise",
				"CarrierServiceCode",
				"1:1:1",
				rProcess[18]),

		new MapEntry(
				19,
				0,
				-1,
				"ATPCheckInterface/ATPHeader/Carrier",
				"",
				"Promise",
				"SCAC",
				"1:1:1",
				rProcess[19]),

		new MapEntry(
				20,
				0,
				-1,
				"ATPCheckInterface/ATPHeader/ShipToAccount",
				"",
				"",
				"",
				"1:1:1",
				rProcess[20]),

		new MapEntry(
				21,
				0,
				-1,
				"ATPCheckInterface/ATPHeader/ShipToAccountId",
				"",
				"",
				"",
				"1:1:1",
				rProcess[21]),

		new MapEntry(
				22,
				0,
				-1,
				"ATPCheckInterface/ATPHeader/ShipToAccountIntegrationId",
				"",
				"",
				"",
				"1:1:1",
				rProcess[22]),

		new MapEntry(
				23,
				0,
				-1,
				"",
				"",
				"Promise/ShipToAddress",
				"ZipCode",
				"",
				rProcess[23]),

		new MapEntry(
				24,
				0,
				-1,
				"",
				"",
				"Promise/ShipToAddress",
				"Country",
				"",
				rProcess[24]),

		new MapEntry(
				25,
				0,
				-1,
				"ATPCheckInterface/ATPHeader/ATPLineItems/ParentRowId",
				"",
				"Promise/PromiseLines/PromiseLine/BundleParentLine",
				"LineId",
				"1:1:n:1",
				rProcess[25]),

    };

	private static TargetProperties m_TargetProperties = new TargetProperties
	(
			null,
			null,
			false,
			false

	);

	protected Content[] rContents;

	protected TargetProperties getTargetProperties()
	{
		return m_TargetProperties;
	}

    protected int getMapEntryCount()
    {
		return rMapEntries.length;
    }

    protected MapEntry getMapEntryAt(int i)
    {
		return rMapEntries[i];
    }

	protected int getContentCount()
	{
		return rContents.length;
	}

    protected Content getContentAt(int id)
    {
		return rContents[id];
    }

    protected HahtDocument instantiateSourceDOM(int nDocNum) throws HahtXMLException
    {
		HahtDocument doc;

		switch (nDocNum)
		{
		case 0:
			doc = new XercesDoc(false);
			break;

		default:
			doc = new XercesDoc(false);
			break;
		}
		return doc;
    }

	protected int getInputDocumentCount()
	{
		return 1;
	}

    public SiebelGetATPIn()
    {
		rContents = new Content[26];
		rContents[0] = new Content(this, getMapEntryAt(0));
		rContents[1] = new Content(this, getMapEntryAt(1));
		rContents[2] = new ExpressionContent(this, getMapEntryAt(2));
		rContents[3] = new ExpressionContent(this, getMapEntryAt(3));
		rContents[4] = new ValueOfContent(this, getMapEntryAt(4));
		rContents[5] = new Content(this, getMapEntryAt(5));
		rContents[6] = new Content(this, getMapEntryAt(6));
		rContents[7] = new ExpressionContent(this, getMapEntryAt(7));
		rContents[8] = new GroupingContent(this, getMapEntryAt(8), "grpLines");
		rContents[9] = new Content(this, getMapEntryAt(9));
		rContents[10] = new Content(this, getMapEntryAt(10));
		rContents[11] = new ValueOfContent(this, getMapEntryAt(11));
		rContents[12] = new ValueOfContent(this, getMapEntryAt(12));
		rContents[13] = new ExpressionContent(this, getMapEntryAt(13));
		rContents[14] = new Content(this, getMapEntryAt(14));
		rContents[15] = new Content(this, getMapEntryAt(15));
		rContents[16] = new ValueOfContent(this, getMapEntryAt(16));
		rContents[17] = new Content(this, getMapEntryAt(17));
		rContents[18] = new ValueOfContent(this, getMapEntryAt(18));
		rContents[19] = new ValueOfContent(this, getMapEntryAt(19));
		rContents[20] = new Content(this, getMapEntryAt(20));
		rContents[21] = new Content(this, getMapEntryAt(21));
		rContents[22] = new Content(this, getMapEntryAt(22));
		rContents[23] = new ExpressionContent(this, getMapEntryAt(23));
		rContents[24] = new ExpressionContent(this, getMapEntryAt(24));
		rContents[25] = new ValueOfContent(this, getMapEntryAt(25));

    }

	/////////////////////////////////////////////////////////////////////////
	// Set the variables defined by variable map entries
	/////////////////////////////////////////////////////////////////////////

	public void setVariables()
	{
		strOrganizationId = getContentAt(0).getNextString();
		strOrganizationIntegrationId = getContentAt(1).getNextString();
		strShipComplete = getContentAt(5).getNextString();
		strSingleDelivery = getContentAt(6).getNextString();
		strIntegrationId = getContentAt(9).getStringArray();
		strRowId = getContentAt(10).getStringArray();
		strProductId = getContentAt(14).getStringArray();
		strProductIntegrationId = getContentAt(15).getStringArray();
		strPartNumber = getContentAt(17).getStringArray();
		strShipToAccount = getContentAt(20).getNextString();
		strShipToAccountId = getContentAt(21).getNextString();
		strShipToAccountIntegrationId = getContentAt(22).getNextString();

	}

	/////////////////////////////////////////////////////////////////////////
	// Inner classes for submaps
	/////////////////////////////////////////////////////////////////////////



    /////////////////////////////////////////////////////////////////////////
    // Generated process methods.
    /////////////////////////////////////////////////////////////////////////

	public String _expression_2_0() throws Exception { return SiebelMapperUtils.getDefaultOrgCode(); }
	public String _expression_3_0() throws Exception { return "Y"; }
	public String _filter_4_0(String s, org.w3c.dom.Node node) throws Exception { return Conversions.convertDateTime(s,"MM/dd/yyyy hh:mm:ss","yyyy-MM-dd'T'hh:mm:ss'Z'"); }
	public String _expression_7_0() throws Exception { return SiebelMapperUtils.computeDependencyShippingRule (strSingleDelivery, strShipComplete); }
	public String _expression_13_0() throws Exception { return SiebelMapperUtils.computeItemID (getGroupIndex ("grpLines"), strRowId, strIntegrationId, strPartNumber, strProductId, strProductIntegrationId); }
	public String _filter_16_0(String s, org.w3c.dom.Node node) throws Exception { return SiebelMapperUtils.computeUOM (s, true); }
	public String _expression_23_0() throws Exception { return SiebelMapperUtils.computeShipToZipCode(getEnv(), strShipToAccountId, strShipToAccountIntegrationId); }
	public String _expression_24_0() throws Exception { return SiebelMapperUtils.computeShipToCountry(getEnv(), strShipToAccountId, strShipToAccountIntegrationId); }
	public Boolean _condition_25_0(String s, org.w3c.dom.Node node) throws Exception { return new Boolean(!s.equals("")); }


	/////////////////////////////////////////////////////////////////////////
	// Generate member variables
	/////////////////////////////////////////////////////////////////////////

	protected String strOrganizationId;
	protected String strOrganizationIntegrationId;
	protected String strShipComplete;
	protected String strSingleDelivery;
	protected String[] strIntegrationId;
	protected String[] strRowId;
	protected String[] strProductId;
	protected String[] strProductIntegrationId;
	protected String[] strPartNumber;
	protected String strShipToAccount;
	protected String strShipToAccountId;
	protected String strShipToAccountIntegrationId;

}

